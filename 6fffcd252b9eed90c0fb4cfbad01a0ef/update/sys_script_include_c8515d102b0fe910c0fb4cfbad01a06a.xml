<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_dtitg_notificati.EventRecipients</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description> Concatenates (joins) the the event recipients.</description>
        <name>EventRecipients</name>
        <script><![CDATA[/* eslint-disable camelcase */
/* eslint-disable no-underscore-dangle */
/* eslint-disable no-undef */
/* eslint-disable no-unused-vars */
/**
 * @class EventRecipients
 * @description  Concatenates (joins) the the event recipients.
 * @since 09/11/2023
 * @date  09/11/2023
 * @version 1.0.0
 * @author Thomas Grensemann E-Mail: <thomas.grensemann@t-systems.com>
 *
 */
class EventRecipients extends RecipientCollector {

    /**
     * Concatenates (joins) the the event recipients.
     *
     * @param {Object} current current record
     * @param {Object} sysEventEmailAction sysevent_email_action record
     * @param {Object} event event object
     *
     * @returns {Array} array of recipient
     */
    determineRecipient(current, sysEventEmailAction, event) {
        let recipientList = [];
        if (UtilityFunctions.determineEvent(event)) {

            let parmOneRecipients = this._getRecipients(sysEventEmailAction, event, 'event_parm_1', 'parm1');
            let parmTwoRecipients = this._getRecipients(sysEventEmailAction, event, 'event_parm_2', 'parm2');

            recipientList = recipientList.concat(parmOneRecipients, parmTwoRecipients);
        }

        gs.info(`[Notification SM.now][EventRecipients][determineRecipient] recipientList => ${ recipientList}`);

        return recipientList;
    }

    /**
     * Reads the recipients from the event.
     *
     * @param {Object} sysEventEmailAction sysevent_email_action record
     * @param {Object} event event object
     * @param {String} emailActionParm name of the sysEventEmailAction parameter
     * @param {String} eventParm name of the event parameter
     *
     * @returns {Array} array of recipient
     */
    _getRecipients(sysEventEmailAction, event, emailActionParm, eventParm) {
        let recipientList = [];

        gs.debug(`[EventRecipients][_getRecipients] contains ==>${ sysEventEmailAction[emailActionParm]}`);

        if (sysEventEmailAction[emailActionParm]) {

            let recipients = event[eventParm].toString();
            recipientList = recipients.split(',');

            gs.debug(`[EventRecipients][_getRecipients] recipients ==>${ recipients}`);
        }

        return recipientList;
    }
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin_thomas</sys_created_by>
        <sys_created_on>2023-05-22 15:47:45</sys_created_on>
        <sys_id>c8515d102b0fe910c0fb4cfbad01a06a</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>EventRecipients</sys_name>
        <sys_package display_value="Notification SM.now WORK IN PROGRESS" source="x_dtitg_notificati">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Notification SM.now WORK IN PROGRESS">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_scope>
        <sys_update_name>sys_script_include_c8515d102b0fe910c0fb4cfbad01a06a</sys_update_name>
        <sys_updated_by>admin_tonguyen</sys_updated_by>
        <sys_updated_on>2023-09-16 04:40:34</sys_updated_on>
    </sys_script_include>
</record_update>
