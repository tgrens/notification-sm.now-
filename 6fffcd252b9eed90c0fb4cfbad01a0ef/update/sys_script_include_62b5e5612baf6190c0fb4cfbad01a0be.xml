<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_dtitg_notificati.BusinessServiceDeterminer</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Base script for all BussinesServiceDeterminer.</description>
        <name>BusinessServiceDeterminer</name>
        <script><![CDATA[/* eslint-disable camelcase */
/* eslint-disable no-undef */
/* eslint-disable no-unused-vars */
/**
 * @class BusinessServiceDeterminer
 * @description Base script for all BussinesServiceDeterminer.
 * @since 09/11/2023
 * @date  09/11/2023
 * @version 1.0.0
 * @author Thomas Grensemann E-Mail: <thomas.grensemann@t-systems.com>
 *
 */
class BusinessServiceDeterminer {

    /**
     * Client passes a chain object. This improves flexibility and
     * makes testing  easier.
     *
     * @param {Object} _nextProcessor chain object
     */
    setNext(_nextProcessor) {
        this.nextProcessor = _nextProcessor;
    }

    /**
     * Runs check on the next object in chain or ends traversing if we're in
     * last object in chain.
     *
     * @param {Object} current ticket record
     * @param {Object} sysEventEmailAction sysevent_email_action record
     * @param {Object} event event that triggers the notificatoin
     *
     * @returns {String} businessService sys_id
     */
    process(current, sysEventEmailAction, event) {
        let businessService = this.determineBusinessService(current, sysEventEmailAction, event);

        if (UtilityFunctions.isBlank(businessService)) {
            if (this.nextProcessor) {
                businessService = this.nextProcessor.process(current, sysEventEmailAction, event);
            }
        }

        return businessService;
    }

    /**
     * Subscrips will implement this method with concrete checks.
     *
     * @param {Object} current ticket record
     * @param {Object} sysEventEmailAction sysevent_email_action record
     * @param {Object} event event that triggers the notificatoin
     */
    determineBusinessService(current, sysEventEmailAction, event) {
        throw new Error('Abstract method!');
    }

}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin_thomas</sys_created_by>
        <sys_created_on>2023-06-20 11:00:40</sys_created_on>
        <sys_id>62b5e5612baf6190c0fb4cfbad01a0be</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>BusinessServiceDeterminer</sys_name>
        <sys_package display_value="Notification SM.now WORK IN PROGRESS" source="x_dtitg_notificati">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Notification SM.now WORK IN PROGRESS">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_scope>
        <sys_update_name>sys_script_include_62b5e5612baf6190c0fb4cfbad01a0be</sys_update_name>
        <sys_updated_by>admin_thomas</sys_updated_by>
        <sys_updated_on>2024-07-12 11:52:44</sys_updated_on>
    </sys_script_include>
</record_update>
