<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_dtitg_notificati.InternalTicketCondition</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Checks for internal tickets</description>
        <name>InternalTicketCondition</name>
        <script><![CDATA[/* eslint-disable max-len */
/* eslint-disable camelcase */
/* eslint-disable no-undef */
/* eslint-disable no-unused-vars */
/**
 * @class InternalTicketCondition
 * @description Checks for internal tickets
 * @since 04/26/2023
 * @date  10/11/2023
 * @version 1.0.1
 * @author Thomas Grensemann E-Mail: <thomas.grensemann@t-systems.com> / Markus Hammelmann E-Mail: <markus,hammelmann@telekom.de>
 *
 */
class InternalTicketCondition extends ConditionController {

    /**
     * @description Notification mails should only be sent to the ticket recipient if the "OTIP Creator system" is empty ( meaning that the INM was never sent over OTIP) or the creator system is included in the SystemsEmailWhitelist (meaning that e-mails have to be send for INMs originating from on of those creators).
     *
     * @param {object} conf - see NotificationConditionController#notificationEnabled()
     *
     * @returns {Boolean} - true/false
     */
    checkCondition(conf) {
        let send = true;
        const current = conf.current;

        gs.debug(`[InternalTicketCondition][validateNotification] x_dtitg_itsm_smnow_otip_creator_system => ${ current.getValue('x_dtitg_itsm_smnow_otip_creator_system')}`);

        const operationSystem = current.x_dtitg_itsm_smnow_otip_creator_system ?
            current.getValue('x_dtitg_itsm_smnow_otip_creator_system') : '';

        if (x_dtitg_core_smnow.UtilityFunctions.isNotBlank(operationSystem)) {
            // eslint-disable-next-line no-underscore-dangle
            send = this._hasToSend(Constants.SYSTEMS_EMAIL_WHITELIST, operationSystem);
        }

        gs.debug(`[InternalTicketCondition][validateNotification] internal => ${ send}`);

        return send;
    }

    /**
     * Checks if the operationSystem is included in the SystemsEmailWhitelist.
     *
     * @param {Array} whitelist SystemsEmailWhitelist
     * @param {String} operationSystem OTIP Creator system
     *
     * @returns {Boolean} send true/false
     */
    _hasToSend(whitelist, operationSystem) {
        return whitelist.includes(operationSystem);
    }

}
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin_thomas</sys_created_by>
        <sys_created_on>2023-04-26 07:55:10</sys_created_on>
        <sys_id>29bb25bb2b922510c0fb4cfbad01a0ca</sys_id>
        <sys_mod_count>57</sys_mod_count>
        <sys_name>InternalTicketCondition</sys_name>
        <sys_package display_value="Notification SM.now WORK IN PROGRESS" source="x_dtitg_notificati">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Notification SM.now WORK IN PROGRESS">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_scope>
        <sys_update_name>sys_script_include_29bb25bb2b922510c0fb4cfbad01a0ca</sys_update_name>
        <sys_updated_by>admin_thomas</sys_updated_by>
        <sys_updated_on>2024-04-25 08:14:35</sys_updated_on>
    </sys_script_include>
</record_update>
