<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_dtitg_notificati.AssignmentGroupDeterminerProcessor</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Determines the assignment group (Chain of Responsibility) for the given parameters.</description>
        <name>AssignmentGroupDeterminerProcessor</name>
        <script><![CDATA[/* eslint-disable no-undef */
/* eslint-disable id-length */
/* eslint-disable no-unused-vars */
/**
 * @class AssignmentGroupDeterminerProcessor
 * @description Determines the assignment group (Chain of Responsibility) for the given parameters.
 * @since 29/04/2024
 * @date  29/04/2024
 * @version 1.0.0
 * @author Thomas Grensemann E-Mail: <thomas.grensemann@t-systems.com>
 *
 */
class AssignmentGroupDeterminerProcessor {


    /**
   * Function that finds (Chain of Responsibility) the
   * business service of a given tickte.
   *
    * @param {Object} current GlideRecord object for the ticket record
    * @param {Object} sysEventEmailAction GlideRecord object for the email notification (sysevent_email_action).
    * @param {Object} event GlideRecord object for the event that fired the notification (sysevent).
   *
   * @returns {String} assignmentGroup sys_id of the assignment group
   */
    findAssignmentGroup(current, sysEventEmailAction, event) {
        let assignmentGroup = '';

        // Chain ordering:
        // 1. TicketAssignmentGroup
        // 2. EventTicketAssignmentGroup

        let ticketAssignmentGroup = new TicketAssignmentGroup();

        let incidentTicketAssignmentGroup = new IncidentTicketAssignmentGroup();
        incidentTicketAssignmentGroup.setNext(ticketAssignmentGroup);

        let eventTicketAssignmentGroup = new EventTicketAssignmentGroup();
        eventTicketAssignmentGroup.setNext(incidentTicketAssignmentGroup);
        // initialize chain of responsibility. Execute first chain in queue
        assignmentGroup = eventTicketAssignmentGroup.process(current, sysEventEmailAction, event);

        return assignmentGroup;
    }
}
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin_thomas</sys_created_by>
        <sys_created_on>2024-04-24 12:54:24</sys_created_on>
        <sys_id>e8031181f8f1c2145dcfbd805aab8a9f</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>AssignmentGroupDeterminerProcessor</sys_name>
        <sys_package display_value="Notification SM.now WORK IN PROGRESS" source="x_dtitg_notificati">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Notification SM.now WORK IN PROGRESS">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_scope>
        <sys_update_name>sys_script_include_e8031181f8f1c2145dcfbd805aab8a9f</sys_update_name>
        <sys_updated_by>admin_thomas</sys_updated_by>
        <sys_updated_on>2024-05-06 13:55:30</sys_updated_on>
    </sys_script_include>
</record_update>
