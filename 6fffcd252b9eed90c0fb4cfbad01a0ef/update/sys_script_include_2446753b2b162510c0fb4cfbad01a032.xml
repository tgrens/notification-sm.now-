<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_dtitg_notificati.ContentService</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Base class for all ContentServices</description>
        <name>ContentService</name>
        <script><![CDATA[/* eslint-disable camelcase */
/* eslint-disable no-undef */
/* eslint-disable no-unused-vars */
/**
 * @class ContentService
 * @description Base class for all ContentServices
 * @since 09/11/2023
 * @date  09/11/2023
 * @version 1.0.0
 * @author Thomas Grensemann E-Mail: <thomas.grensemann@t-systems.com>
 */
class ContentService {

    /**
     * Constructor
     *
     * @param {Object} _current GlideRecord object for the ticket record
     * @param {Object} _template Handles printing from the mail script to the email message.
     * @param {Object} _email EmailOutbound object
     * @param {Object} _sysEventEmailAction GlideRecord object for the email notification (sysevent_email_action).
     * @param {Object} _event GlideRecord object for the event that fired the notification (sysevent).
     */
    constructor(_current, _template, _email, _sysEventEmailAction, _event) {
        this.current = _current;
        this.template = _template;
        this.email = _email;
        this.sysEventEmailAction = _sysEventEmailAction;
        this.event = _event;
    }

    /**
     * Reads the language id notifParams object
     *
     * notifParams
     *
     * @param {Object} notifParams see email.engine.js
     *
     * @returns {String} language id
     */
    getLanguageId(notifParams) {
        let languageId = notifParams.languageId;
        let parmObj = notifParams.paramObj;

        if (parmObj.languageId) {
            languageId = parmObj.languageId;
        }

        // eslint-disable-next-line prefer-template
        gs.debug('[Notification][ContentService][determineLanguageId] languageId ==> ' + languageId);

        return languageId;
    }

    /**
     * Returns the label key from the notifParams object
     *
     * @param {Object} notifParams see email.engine.js
     *
     * @returns {String} label key
     */
    getLabelKey(notifParams) {
        let parmObj = notifParams.paramObj;

        return parmObj.key;
    }

    /**
     * Returns the value for a given property from the obj
     *
     * @param {Object} obj javascript obj
     * @param {String} property name of the property
     *
     * @returns {String} property value
     */
    getParameter(obj, property) {
        return obj[property];
    }

    /**
     * Subscrips will implement this method with concrete checks.
     *
     * @param {Object} notifParams see email.engine.js
     */
    process(notifParams) {
        throw new Error('Abstract method!');
    }
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin_thomas</sys_created_by>
        <sys_created_on>2023-04-26 08:40:36</sys_created_on>
        <sys_id>2446753b2b162510c0fb4cfbad01a032</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_name>ContentService</sys_name>
        <sys_package display_value="Notification SM.now WORK IN PROGRESS" source="x_dtitg_notificati">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Notification SM.now WORK IN PROGRESS">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_scope>
        <sys_update_name>sys_script_include_2446753b2b162510c0fb4cfbad01a032</sys_update_name>
        <sys_updated_by>admin_thomas</sys_updated_by>
        <sys_updated_on>2024-06-14 11:19:10</sys_updated_on>
    </sys_script_include>
</record_update>
