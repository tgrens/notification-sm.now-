<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_dtitg_notificati.ConditionController</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Base script for the Chain of Responsibility to  decide if notification should be send.</description>
        <name>ConditionController</name>
        <script><![CDATA[/* eslint-disable no-unused-vars */
/* eslint-disable no-undef */
/**
 * @class ConditionController
 * @description Base script for the Chain of Responsibility to  decide if notification should be send.
 * @since 09/11/2023
 * @date  09/11/2023
 * @version 1.0.0
 * @author Thomas Grensemann E-Mail: <thomas.grensemann@t-systems.com>
 *
 */
class ConditionController {

    /**
     * Client passes a chain object. This improves flexibility and
     * makes testing  easier.
     *
     * @param {Object} _nextProcessor chain object
     */
    setNext(_nextProcessor) {
        this.nextProcessor = _nextProcessor;
    }

    /**
   * Runs check on the next object in chain or ends traversing if we're in
   * last object in chain.
   *
   * @param {Object} conf
   *
      {
        'name': 'SN.now',     name of the notification
        'current': current,   current object for that the notification will be triggered
        'event': event,       event that triggers the notification
        'expression': true    expression that evaluate to true or false
      }
   *
   *
   * @returns {Boolean} true/false
   */
    process(conf) {
        let answer = this.checkCondition(conf);

        if (answer) {
            if (this.nextProcessor) {
                answer = this.nextProcessor.process(conf);
            }
        }

        return answer;
    }

    /**
    * Subscrips will implement this method with concrete checks.
    *
    * @param {Object} conf
    *
      {
        'name': 'SN.now',     name of the notification
        'current': current,   current object for that the notification will be triggered
        'event': event,       event that triggers the notification
        'expression': true    expression that evaluate to true or false
      }
    */
    checkCondition(conf) {
        throw new Error('Abstract method!');
    }
}
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin_thomas</sys_created_by>
        <sys_created_on>2023-04-21 06:33:18</sys_created_on>
        <sys_id>5cb82bca2b56a1d0c0fb4cfbad01a0b6</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>ConditionController</sys_name>
        <sys_package display_value="Notification SM.now WORK IN PROGRESS" source="x_dtitg_notificati">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Notification SM.now WORK IN PROGRESS">6fffcd252b9eed90c0fb4cfbad01a0ef</sys_scope>
        <sys_update_name>sys_script_include_5cb82bca2b56a1d0c0fb4cfbad01a0b6</sys_update_name>
        <sys_updated_by>admin_thomas</sys_updated_by>
        <sys_updated_on>2024-04-25 13:54:04</sys_updated_on>
    </sys_script_include>
</record_update>
